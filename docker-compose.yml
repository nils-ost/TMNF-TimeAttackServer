version: '3.6'

services:
  orchestrator:
    image: nilsost/tas:${TAS_VERSION:-latest}
    command: orchestrator
    depends_on:
      - mongodb
      - minio
      - rabbitmq
    environment:
      - MONGO_HOST=mongodb
    volumes:
      - tas_static:/app/static:rw
      - /var/run/docker.sock:/var/run/docker.sock
      - ./docker-compose.yml:/app/docker-compose.yml

  backend:
    image: nilsost/tas:${TAS_VERSION:-latest}
    command: api
    depends_on:
      - mongodb
      - minio
    environment:
      - MONGO_HOST=mongodb
    volumes:
      - tas_static:/app/static:ro

  dedicated-receiver:
    image: nilsost/tas:${TAS_VERSION:-latest}
    command: dreceiver
    depends_on:
      - mongodb
      - rabbitmq
    deploy:
      replicas: 0
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - MONGO_HOST=mongodb

  dedicated-responder:
    image: nilsost/tas:${TAS_VERSION:-latest}
    command: dresponder
    depends_on:
      - mongodb
      - rabbitmq
    deploy:
      replicas: 0
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - MONGO_HOST=mongodb

  dedicated-controller:
    image: nilsost/tas:${TAS_VERSION:-latest}
    command: dcontroller
    depends_on:
      - mongodb
      - rabbitmq
    deploy:
      replicas: 0
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - MONGO_HOST=mongodb

  frontend:
    image: nilsost/tas-frontend:${TAS_VERSION:-latest}
    depends_on:
      - backend

  tmnfd:
    image: nilsost/tas-tmnfd:${TAS_VERSION:-latest}
    depends_on:
      - minio
    deploy:
      replicas: 0
    environment:
      - RABBIT_HOST=127.0.0.1
    volumes:
      - tmnfd_tracks:/tracks:rw
    network_mode: "host"

  tmnfd-static:
    image: nilsost/tas-tmnfd:${TAS_VERSION:-latest}
    depends_on:
      - minio
    environment:
      - TMNFD_CONFIG_FILE=/cfg/config.json
      - RABBIT_HOST=127.0.0.1
    volumes:
      - tmnfd_tracks:/tracks:rw
      - tmnfd_static_config:/cfg:rw
    network_mode: "host"

  haproxy:
    image: haproxy:lts-alpine
    depends_on:
      - backend
      - frontend
    ports:
      - ${BIND_IP:-0.0.0.0}:80:80
      - ${BIND_IP:-0.0.0.0}:443:443
      - ${MONITORING_IP:-0.0.0.0}:8404:8404
    sysctls:
      - net.ipv4.ip_unprivileged_port_start=0
    volumes:
      - ./install/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro

  mongodb:
    image: mongo:4.4
    volumes:
      - mongo_data:/data/db:rw

  rabbitmq:
    image: rabbitmq:3.12-alpine
    ports:
      - 127.0.0.1:5672:5672

  minio:
    image: minio/minio:RELEASE.2022-04-30T22-23-53Z
    environment:
      - MINIO_ROOT_USER=tmtas
      - MINIO_ROOT_PASSWORD=password
      - MINIO_PROMETHEUS_AUTH_TYPE=public
    command: server /data
    volumes:
      - minio_data:/data:rw

volumes:
  tas_static:
  mongo_data:
  minio_data:
  tmnfd_tracks:
  tmnfd_static_config:
